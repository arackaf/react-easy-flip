{"version":3,"file":"index.mjs","sources":["../src/useFlipAnimation/index.js"],"sourcesContent":["import { useRef, useEffect, useLayoutEffect } from \"react\";\r\n\r\nconst debounce = function debounce(fn) {\r\n  let timer;\r\n  return function _debounce(...args) {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => fn(...args));\r\n  };\r\n};\r\n\r\nexport default function useFlipAnimation({ root, opts, deps }) {\r\n  const childCoords = useRef({ refs: Object.create(null) });\r\n\r\n  const transition = opts.transition || 500;\r\n  const delay = opts.delay || 0;\r\n  const easing = opts.easing || \"ease\";\r\n\r\n  useEffect(() => {\r\n    if (!root.current) return;\r\n\r\n    const rootCopy = root.current;\r\n\r\n    // Update saved DOM position on transition end to prevent\r\n    // \"in-flight\" positions saved as previous\r\n    const onTransitionEnd = function onTransitionEnd(e) {\r\n      const targetKey = e.target.dataset.id;\r\n      childCoords.current.refs[targetKey] = e.target.getBoundingClientRect();\r\n      e.target.inFlight = false;\r\n    };\r\n\r\n    rootCopy.addEventListener(\"transitionend\", onTransitionEnd);\r\n    return () => rootCopy.removeEventListener(\"transitionend\", onTransitionEnd);\r\n  }, [root, deps]);\r\n\r\n  useEffect(() => {\r\n    const onResize = debounce(() => {\r\n      if (!root.current) return;\r\n\r\n      const children = root.current.children;\r\n      for (let child of children) {\r\n        const key = child.dataset.id;\r\n        childCoords.current.refs[key] = child.getBoundingClientRect();\r\n      }\r\n    });\r\n\r\n    window.addEventListener(\"resize\", onResize);\r\n\r\n    return () => window.removeEventListener(\"resize\", onResize);\r\n  }, [root]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!root.current) return;\r\n\r\n    const play = function play(elem) {\r\n      elem.style.transform = ``;\r\n      elem.style.transition = `transform ${transition}ms ${easing} ${delay}ms`;\r\n      elem.inFlight = true;\r\n    };\r\n\r\n    const invert = function invert(elem) {\r\n      return function _invert({ dx, dy }) {\r\n        elem.style.transform = `translate(${dx}px, ${dy}px)`;\r\n        elem.style.transition = `transform 0s`;\r\n      };\r\n    };\r\n\r\n    const children = root.current.children;\r\n\r\n    if (children.length < 1) return;\r\n\r\n    // Clone ref content because it is updated faster than rAF executes\r\n    const childCoordCopy = { ...childCoords.current.refs };\r\n\r\n    requestAnimationFrame(() => {\r\n      for (let child of children) {\r\n        const key = child.dataset.id;\r\n\r\n        if (key in childCoordCopy) {\r\n          const coords = childCoordCopy[key];\r\n\r\n          // Calculate delta of old and new DOM positions for transform\r\n          const prevX = coords.left;\r\n          const prevY = coords.top;\r\n\r\n          const nextX = child.getBoundingClientRect().left;\r\n          const nextY = child.getBoundingClientRect().top;\r\n\r\n          const deltaX = prevX - nextX;\r\n          const deltaY = prevY - nextY;\r\n\r\n          invert(child)({ dx: deltaX, dy: deltaY });\r\n\r\n          requestAnimationFrame(() => play(child));\r\n        }\r\n      }\r\n    });\r\n\r\n    // Save new DOM positions\r\n    for (let child of children) {\r\n      const key = child.dataset.id;\r\n      if (!child.inFlight) {\r\n        childCoords.current.refs[key] = child.getBoundingClientRect();\r\n      }\r\n    }\r\n  }, [deps, transition, delay, easing, root]);\r\n}\r\n"],"names":["const","debounce","fn","timer","clearTimeout","setTimeout","args","useFlipAnimation","ref","childCoords","useRef","refs","Object","create","transition","opts","delay","easing","useEffect","root","current","rootCopy","onTransitionEnd","e","target","dataset","id","getBoundingClientRect","inFlight","addEventListener","removeEventListener","deps","onResize","children","let","child","window","useLayoutEffect","length","childCoordCopy","requestAnimationFrame","elem","key","coords","prevX","left","prevY","top","nextX","nextY","style","transform","dx","dy"],"mappings":"mEAEAA,IAAMC,EAAW,SAAkBC,OAC7BC,SACG,kEACLC,aAAaD,GACbA,EAAQE,6BAAiBH,aAAG,EAAGI,OAIpB,SAASC,EAAiBC,kCACjCC,EAAcC,EAAO,CAAEC,KAAMC,OAAOC,OAAO,QAE3CC,EAAaC,EAAKD,YAAc,IAChCE,EAAQD,EAAKC,OAAS,EACtBC,EAASF,EAAKE,QAAU,OAE9BC,gBACOC,EAAKC,aAEJC,EAAWF,EAAKC,QAIhBE,EAAkB,SAAyBC,GAE/Cd,EAAYW,QAAQT,KADFY,EAAEC,OAAOC,QAAQC,IACGH,EAAEC,OAAOG,wBAC/CJ,EAAEC,OAAOI,UAAW,UAGtBP,EAASQ,iBAAiB,gBAAiBP,qBAC9BD,EAASS,oBAAoB,gBAAiBR,MAC1D,CAACH,EAAMY,IAEVb,iBACQc,EAAW/B,gBACVkB,EAAKC,sBAEOD,EAAKC,QAAQa,yBACF,CAAvBC,IAAIC,OAEP1B,EAAYW,QAAQT,KADRwB,EAAMV,QAAQC,IACMS,EAAMR,kCAI1CS,OAAOP,iBAAiB,SAAUG,qBAErBI,OAAON,oBAAoB,SAAUE,KACjD,CAACb,IAEJkB,gBACOlB,EAAKC,aAeJa,EAAWd,EAAKC,QAAQa,cAE1BA,EAASK,OAAS,QAGhBC,EAAiB3B,iBAAKH,EAAYW,QAAQT,MAEhD6B,sDACON,IAfwBO,EAepBN,OACDO,EAAMP,EAAMV,QAAQC,MAEtBgB,KAAOH,EAAgB,KACnBI,EAASJ,EAAeG,GAGxBE,EAAQD,EAAOE,KACfC,EAAQH,EAAOI,IAEfC,EAAQb,EAAMR,wBAAwBkB,KACtCI,EAAQd,EAAMR,wBAAwBoB,KA1BnBN,EA+BlBN,EA9BJ,SAAiB3B,GACtBiC,EAAKS,MAAMC,UAAa,oCACxBV,EAAKS,MAAMpC,WAAc,iBA4BT,CAAEsC,GAHDR,EAAQI,EAGKK,GAFbP,EAAQG,IAIvBT,wCAvCqBC,EAuCYN,GAtChCe,MAAMC,UAAa,GACxBV,EAAKS,MAAMpC,WAAc,aAAYA,QAAgBG,MAAUD,YAC/DyB,EAAKb,UAAW,GAHL,IAAca,YAqBPR,4BAwBf,UAAaA,kBAAU,CAAvBC,IAAIC,OAEFA,EAAMP,WACTnB,EAAYW,QAAQT,KAFVwB,EAAMV,QAAQC,IAEQS,EAAMR,6BAGzC,CAACI,EAAMjB,EAAYE,EAAOC,EAAQE"}